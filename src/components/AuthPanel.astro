---
---
<div class="space-y-4">
  <form id="auth-form" class="space-y-2">
    <input id="auth-email" type="email" placeholder="Email" class="border rounded px-3 py-2 w-full" required />
    <button type="submit" class="px-4 py-2 bg-black text-white rounded">以 Email 登入</button>
  </form>
  <button id="signout-btn" class="px-4 py-2 bg-gray-200 rounded">登出</button>
  <p id="auth-msg" class="text-sm text-gray-600"></p>
</div>

<script type="module">
  // 直接內嵌 Supabase 初始化，避免外部模組依賴
  const SUPABASE_URL = 'https://ubhpjrfwyzlzueduvypt.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InViaHBqcmZ3eXpsenVlZHV2eXB0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3ODY0NDYsImV4cCI6MjA3NDM2MjQ0Nn0.44gSR2Ujk4kaQEw91HxCm3h6vVEdJRQ7b9kwvGXx6Ok';
  
  // 簡化版 Supabase 客戶端
  const supabase = {
    auth: {
      async getSession() {
        const session = localStorage.getItem('sb-auth-token');
        return { data: { session: session ? JSON.parse(session) : null } };
      },
      onAuthStateChange(callback) {
        window.addEventListener('storage', () => {
          const session = localStorage.getItem('sb-auth-token');
          callback('SIGNED_IN', session ? JSON.parse(session) : null);
        });
      },
      async signInWithOtp({ email }) {
        try {
          const response = await fetch(`${SUPABASE_URL}/auth/v1/otp`, {
            method: 'POST',
            headers: {
              'apikey': SUPABASE_ANON_KEY,
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
          });
          const data = await response.json();
          return { error: data.error || null };
        } catch (err) {
          return { error: { message: '網路錯誤' } };
        }
      },
      async signOut() {
        localStorage.removeItem('sb-auth-token');
        window.dispatchEvent(new StorageEvent('storage'));
      }
    }
  };

  const form = document.getElementById('auth-form');
  const emailInput = document.getElementById('auth-email');
  const signoutBtn = document.getElementById('signout-btn');
  const msg = document.getElementById('auth-msg');
  const setMsg = (text) => { if (msg) msg.textContent = String(text); };

  try {
    const { data } = await supabase.auth.getSession();
    setMsg(data?.session ? '已登入' : '就緒');
  } catch { setMsg('就緒'); }

  supabase.auth.onAuthStateChange((_e, session) => {
    setMsg(session ? '已登入' : '已登出');
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const email = emailInput?.value?.trim();
    if (!email) { setMsg('請輸入 Email'); return; }
    setMsg('正在寄送登入連結…');
    try {
      const { error } = await supabase.auth.signInWithOtp({ email });
      setMsg(error ? `登入失敗：${error.message}` : '請至信箱點擊登入連結');
    } catch {
      setMsg('登入失敗，請稍後再試');
    }
  });

  signoutBtn?.addEventListener('click', async () => {
    await supabase.auth.signOut();
    setMsg('已登出');
  });
</script>
